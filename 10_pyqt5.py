# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'todo2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1064, 612)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.additem_pushbutton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.addit())
        self.additem_pushbutton.setGeometry(QtCore.QRect(20, 70, 250, 50))
        self.additem_pushbutton.setObjectName("additem_pushbutton")
        self.deleteitem_pushbutton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.deleteit())
        self.deleteitem_pushbutton.setGeometry(QtCore.QRect(280, 70, 250, 50))
        self.deleteitem_pushbutton.setObjectName("deleteitem_pushbutton")
        self.clearall_pushbutton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.clearit())
        self.clearall_pushbutton.setGeometry(QtCore.QRect(540, 70, 250, 50))
        self.clearall_pushbutton.setObjectName("clearall_pushbutton")
        self.Additem_LineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.Additem_LineEdit.setGeometry(QtCore.QRect(20, 10, 1031, 51))
        self.Additem_LineEdit.setObjectName("Additem_LineEdit")
        self.mylist_listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.mylist_listWidget.setGeometry(QtCore.QRect(20, 131, 1031, 421))
        self.mylist_listWidget.setObjectName("mylist_listWidget")
        self.savedb_pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.save_it())
        self.savedb_pushButton.setGeometry(QtCore.QRect(800, 70, 250, 50))
        self.savedb_pushButton.setObjectName("savedb_pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1064, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # Grab all the items from the database
        self.graball()
    # Crab items from the database
    def graball(self):
        # Create a database or connect to one
        conn = sqlite3.connect('mylist.db')
        # Create a cursor
        c = conn.cursor()

        c.execute("SELECT * FROM todo_list")
        records = c.fetchall()

        # Commit the changes
        conn.commit()

        # Close the connection
        conn.close()

        # Loop through records and add to screen
        for record in records:
            self.mylist_listWidget.addItem(str(record))
    def addit(self):
        # Get item from LineEdit 
        item = self.Additem_LineEdit.text()

        # Add item to list widget
        self.mylist_listWidget.addItem(item)

        # Clear the LineEdit
        self.Additem_LineEdit.setText("")
    def deleteit(self):
        # Grab the selected row or current row
        clicked = self.mylist_listWidget.currentRow()
        # Delete selected row
        self.mylist_listWidget.takeItem(clicked)
    def clearit(self):
        self.mylist_listWidget.clear()
    def save_it(self):
        # Create blank dictionary to hold items
        items = []
        # Loop through the list widget and pull out each item
        for index in range(self.mylist_listWidget.count()):
            items.append(self.mylist_listWidget.item(index))

        for item in items:
            print(item.text())
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "To Do List"))
        self.additem_pushbutton.setText(_translate("MainWindow", "Add Item to List"))
        self.deleteitem_pushbutton.setText(_translate("MainWindow", "Delete Item From List"))
        self.clearall_pushbutton.setText(_translate("MainWindow", "Clear The List"))
        self.savedb_pushButton.setText(_translate("MainWindow", "Save To DataBase"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
